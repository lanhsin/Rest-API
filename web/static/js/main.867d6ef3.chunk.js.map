{"version":3,"sources":["Components/Menu.jsx","Components/Home.jsx","Components/Log.jsx","Components/Test.jsx","Components/Network.jsx","App.js","serviceWorker.js","index.js"],"names":["Menu","Navbar","bg","variant","expand","Brand","href","Toggle","Collapse","id","Nav","className","Link","Component","Version","props","Table","striped","borderless","hover","size","item","result","Commit","Date","TemperaturesItem","Fragment","SensorNumber","Name","ReadingCelsius","Status","State","Health","Temperatures","bordered","map","r","FansDuty","useState","show","setShow","Oem","Custom","Duty","duty","setDuty","handleClose","Button","onClick","this","getApi","state","api","Modal","onHide","animation","Header","closeButton","Title","Body","Footer","Form","Group","controlId","Label","Control","type","placeholder","defaultValue","onChange","event","target","value","url","defaultUrl","replace","patchFanDuty","FansItem","Reading","ReadingUnits","Fans","name","LedsAction","Action","action","setAction","patchLedAction","LedsItem","Leds","ButtonsItem","Buttons","VoltagesItem","ReadingVolts","Voltages","Psus1Item","PowerSupplyType","LineInputVoltageType","LineInputVoltage","PowerCapacityWatts","LastPowerOutputWatts","PowerInputWatts","PowerOutputWatts","Psus1","responsive","Psus2Item","Model","Manufacturer","FirmwareVersion","SerialNumber","PartNumber","SparePartNumber","Psus2","PsusRangeItem","rangeIndex","range","InputType","MinimumVoltage","MaximumVoltage","MinimumFrequencyHz","MaximumFrequencyHz","OutputWattage","PsusRange","psu","psuIndex","InputRanges","rIndex","Power","Badge","pill","PowerSupplies","SsdsItem","status","undefined","Ssds","Home","renderVersion","renderResult","children","renderType","len","Object","entries","length","i","push","startsWith","src","Alert","renderRaw","setState","renderData","renderNone","refreshData","arr","window","location","split","defaultUser","defaultPassword","defaultApi","user","password","ssds","axios","patch","auth","username","then","res","console","log","catch","error","index","get","data","array","Card","style","width","as","Row","margin","Log","useStyles","makeStyles","table","minWidth","defaultEndpoint","platStdio","platStderr","serverStdio","serverStderr","response","endpoint","platStdioTerm","React","createRef","platStderrTerm","serverStdioTerm","serverStderrTerm","getPlatStdio","getPlatStderr","getServerStdio","getServerStderr","term","Terminal","open","ws","WebSocket","onopen","send","onmessage","evt","write","onclose","Container","fluid","Col","ref","statusOk","statusFail","Test","checkServer","ip","serverStatus","e","checkDatabase","dbStatus","checkPlatform","platStatus","handleUrlChange","handleIpChange","handleUserChange","handlePasswordChange","handleSubmit","preventDefault","getResult","defaultIp","defaultResult","defaultStatus","paddingTop","paddingBottom","border","onSubmit","defautPassword","renderStatus","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","RotateLeft","RotateLeftSec","color","PowerSec","Refresh","NetworkConfig","content","peerIp","ssd","ssdId","keys","Port","port","portId","Vlan","vlan","vlanId","config","ipv4Address","Ipv4","Address","ipv4Gateway","Gateway","ipv4Netmask","Mask","ipv6Address","Ipv6","ipv6Prefix","Prefix","ipv6PrefixLen","PrefixLen","vlanType","Type","vlanVid","Vid","vlanPcp","PCP","vlanIpv4","Ipv4Address","vlanIpv6","Ipv6Address","generateTableRowData","maxWidth","icons","pageSize","pageSizeOptions","columns","field","title","editable","onRowUpdate","newData","oldData","Promise","resolve","reject","self","apiData","JSON","parse","stringify","putApiWithId","setApiData","options","grouping","components","Toolbar","padding","TextField","label","actions","icon","tooltip","rowData","resetSsdWithUrl","getApiWithId","Network","Axios","apiCopy","err","retry","timer","setInterval","clearInterval","put","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.867d6ef3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nclass Menu extends Component {\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">Debug Utility</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/network\">Network</Nav.Link>\n            <Nav.Link href=\"/test\">Test</Nav.Link>\n            <Nav.Link href=\"/log\">Log</Nav.Link>\n            <Nav.Link href=\"/docs/index.html\">Docs</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component, useState } from \"react\";\nimport axios from \"axios\";\nimport ReactJson from \"react-json-view\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Row from \"react-bootstrap/Row\";\nimport Table from \"react-bootstrap/Table\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    if (process.env.NODE_ENV === \"development\") {\n      console.log(\"In development mode\");\n      this.defaultUrl = \"http://localhost:8880\";\n    } else {\n      var url = window.location.href;\n      var arr = url.split(\"/\");\n      var result = arr[0] + \"//\" + arr[2];\n      this.defaultUrl = result;\n    }\n    this.defaultUser = \"admin\";\n    this.defaultPassword = \"irene\";\n    this.defaultApi = [\n      {\n        name: \"Version\",\n        url: this.defaultUrl + \"/private/version\",\n        result: {}\n      },\n      {\n        name: \"Temperatures\",\n        url: this.defaultUrl + \"/redfish/v1/Chassis/1/Thermal/Temperatures\",\n        result: {}\n      },\n      {\n        name: \"Leds\",\n        url: this.defaultUrl + \"/redfish/v1/Chassis/1/Misc/Leds\",\n        result: {}\n      },\n      {\n        name: \"Buttons\",\n        url: this.defaultUrl + \"/redfish/v1/Chassis/1/Misc/Buttons\",\n        result: {}\n      },\n      {\n        name: \"Fans\",\n        url: this.defaultUrl + \"/redfish/v1/Chassis/1/Thermal/Fans\",\n        result: {}\n      },\n      {\n        name: \"Power\",\n        url: this.defaultUrl + \"/redfish/v1/Chassis/1/Power\",\n        result: {}\n      }\n    ];\n\n    this.state = {\n      url: this.defaultUrl,\n      user: this.defaultUser,\n      password: this.defaultPassword,\n      api: this.defaultApi,\n      renderType: \"data\"\n    };\n  }\n\n  componentDidMount() {\n    // Add Ssds API\n    for (let i = 0; i < 24; i++) {\n      const ssds = {\n        name: \"Ssds\" + i,\n        url: this.defaultUrl + \"/redfish/v1/Systems/Newell/Ssd/\" + i,\n        result: {}\n      };\n      this.state.api.push(ssds);\n    }\n\n    this.getApi(this.state.api);\n  }\n\n  patchFanDuty(url, duty) {\n    axios\n      .patch(\n        url,\n        { Duty: duty },\n        {\n          auth: {\n            username: this.state.user,\n            password: this.state.password\n          }\n        }\n      )\n      .then(res => {\n        console.log(\"res=\", res);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    return null;\n  }\n\n  patchLedAction(url, action) {\n    axios\n      .patch(\n        url,\n        { Action: action },\n        {\n          auth: {\n            username: this.state.user,\n            password: this.state.password\n          }\n        }\n      )\n      .then(res => {\n        console.log(\"res=\", res);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n    return null;\n  }\n\n  getApi(api) {\n    api.map((item, index) => {\n      axios\n        .get(item.url, {\n          auth: {\n            username: this.state.user,\n            password: this.state.password\n          }\n        })\n        .then(res => {\n          //console.log(\"name=\", item.name, \"res=\", res);\n          const result = res.data;\n          const array = api;\n          array[index].result = result;\n          this.setState({ api: array });\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n      return null;\n    });\n  }\n\n  renderVersion = () => {\n    return (\n      <Version\n        key={this.state.api[0].name + \".table\"}\n        this={this}\n        item={this.state.api[0]}\n      />\n    );\n  };\n\n  renderResult = () => {\n    let children = [];\n\n    if (this.state.renderType === \"data\") {\n      this.state.api.map(item => {\n        switch (item.name) {\n          case \"Version\":\n            return null;\n          case \"Temperatures\":\n          case \"Fans\":\n          case \"Leds\":\n          case \"Buttons\":\n            let len = Object.entries(item.result).length;\n            if (len <= 0) {\n              return null;\n            }\n            for (let i = 0; i < len; i++) {\n              if (item.result[i] === undefined) {\n                return null;\n              }\n            }\n            break;\n          case \"Power\":\n            if (Object.entries(item.result).length <= 0) {\n              return null;\n            }\n            break;\n          default:\n            break;\n        }\n\n        children.push(\n          <Badge key={item.name + \".name\"} pill variant=\"dark\">\n            {item.name}\n          </Badge>\n        );\n\n        //console.log(\"item=\", item);\n\n        if (item.name === \"Temperatures\") {\n          children.push(\n            <Temperatures key={item.name + \".table\"} this={this} item={item} />\n          );\n        } else if (item.name === \"Fans\") {\n          children.push(\n            <Fans key={item.name + \".table\"} this={this} item={item} />\n          );\n        } else if (item.name === \"Leds\") {\n          children.push(\n            <Leds key={item.name + \".table\"} this={this} item={item} />\n          );\n        } else if (item.name === \"Buttons\") {\n          children.push(\n            <Buttons key={item.name + \".table\"} this={this} item={item} />\n          );\n        } else if (item.name === \"Power\") {\n          children.push(\n            <Power key={item.name + \".table\"} this={this} item={item} />\n          );\n        } else if (item.name.startsWith(\"Ssds\")) {\n          children.push(\n            <Ssds\n              key={item.name + item.id + \".table\"}\n              this={this}\n              item={item}\n            />\n          );\n        }\n        return null;\n      });\n    } else if (this.state.renderType === \"raw\") {\n      this.state.api.map(item => {\n        children.push(\n          <Badge key={item.name + item.id + \".name\"} pill variant=\"dark\">\n            {item.name}\n          </Badge>\n        );\n        children.push(\n          <ReactJson key={item.name + item.id + \".json\"} src={item.result} />\n        );\n        return null;\n      });\n    } else {\n      return null;\n    }\n\n    return <Alert variant=\"light\">{children}</Alert>;\n  };\n\n  renderRaw = () => {\n    this.getApi(this.state.api);\n    this.setState({ renderType: \"raw\" });\n  };\n\n  renderData = () => {\n    this.getApi(this.state.api);\n    this.setState({ renderType: \"data\" });\n  };\n\n  renderNone = () => {\n    this.setState({ renderType: \"none\" });\n  };\n\n  refreshData = () => {\n    this.getApi(this.state.api);\n  };\n\n  render() {\n    return (\n      <div>\n        <Card style={{ width: \"100vw\" }}>\n          <Card.Body>\n            <Card.Header as=\"h5\">Dashboard</Card.Header>\n            <Row>\n              <Button\n                variant=\"primary ml-4 mt-2 mr-2 md-2\"\n                onClick={this.renderData}\n              >\n                Show Data\n              </Button>\n              <Button variant=\"warning mt-2 mr-2 md-2\" onClick={this.renderRaw}>\n                Show Raw\n              </Button>\n              <Button variant=\"danger mt-2 mr-2 md-2\" onClick={this.renderNone}>\n                Clear\n              </Button>\n              <Button\n                variant=\"success mt-2 mr-2 md-2\"\n                onClick={this.refreshData}\n              >\n                Refresh\n              </Button>\n            </Row>\n            <div style={{ margin: 20 }} id=\"renderResult\">\n              {this.renderVersion()}\n              {this.renderResult()}\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nfunction Version(props) {\n  return (\n    <Table striped borderless hover size=\"sm\" variant=\"dark\">\n      <thead>\n        <tr>\n          <th>Version</th>\n          <th>Commit</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{props.item.result.Version}</td>\n          <td>{props.item.result.Commit}</td>\n          <td>{props.item.result.Date}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nfunction TemperaturesItem(props) {\n  return (\n    <React.Fragment>\n      <td>{props.result.SensorNumber}</td>\n      <td>{props.result.Name}</td>\n      <td>{props.result.ReadingCelsius}</td>\n      <td>Celsius</td>\n      <td>\n        {props.result.Status.State}/{props.result.Status.Health}\n      </td>\n    </React.Fragment>\n  );\n}\n\nfunction Temperatures(props) {\n  return (\n    <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>Sensor#</th>\n          <th>Name</th>\n          <th>Reading</th>\n          <th>Unit</th>\n          <th>Statue</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.item.result.map(r => (\n          <tr key={r.Name + \"tr\"}>\n            <TemperaturesItem result={r} />\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction FansDuty(props) {\n  const [show, setShow] = useState(false);\n  const [duty, setDuty] = useState(props.result.Oem.Custom.Duty);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleDuty = event => setDuty(event.target.value);\n  const applyDuty = () => {\n    let url = props.this.defaultUrl + props.result[\"@odata.id\"];\n    url = url.replace(\"#\", \"\");\n    props.this.patchFanDuty(url, duty);\n    handleClose();\n  };\n  const handleRefresh = () => {\n    props.this.getApi(props.this.state.api);\n  };\n\n  return (\n    <>\n      <Button variant=\"outline-primary ml-2\" size=\"sm\" onClick={handleShow}>\n        Set\n      </Button>\n      <Button variant=\"outline-success ml-2\" size=\"sm\" onClick={handleRefresh}>\n        Refresh\n      </Button>\n\n      <Modal show={show} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Fan parameters</Modal.Body>\n        <Modal.Footer>\n          <Form>\n            <Form.Group controlId=\"url\">\n              <Form.Label>Duty (10~100)</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Duty\"\n                defaultValue={props.result.Oem.Custom.Duty}\n                onChange={handleDuty}\n              />\n            </Form.Group>\n          </Form>\n          <Button variant=\"primary\" onClick={applyDuty}>\n            Apply\n          </Button>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nfunction FansItem(props) {\n  return (\n    <React.Fragment>\n      <td>{props.result.SensorNumber}</td>\n      <td>{props.result.Name}</td>\n      <td>{props.result.Reading}</td>\n      <td>{props.result.ReadingUnits}</td>\n      <td>\n        {props.result.Oem.Custom.Duty}\n        <FansDuty this={props.this} result={props.result} />\n      </td>\n      <td>\n        {props.result.Status.State}/{props.result.Status.Health}\n      </td>\n    </React.Fragment>\n  );\n}\n\nfunction Fans(props) {\n  return (\n    <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>Sensor#</th>\n          <th>Name</th>\n          <th>Reading</th>\n          <th>Unit</th>\n          <th>Action</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.item.result.map(r => (\n          <tr key={r.Name + \"tr\"}>\n            <FansItem key={props.item.name} this={props.this} result={r} />\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction LedsAction(props) {\n  const [show, setShow] = useState(false);\n  const [action, setAction] = useState(props.result.Oem.Custom.Action);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleAction = event => setAction(event.target.value);\n  const applyAction = () => {\n    let url = props.this.defaultUrl + props.result[\"@odata.id\"];\n    url = url.replace(\"#\", \"\");\n    props.this.patchLedAction(url, action);\n    handleClose();\n  };\n  const handleRefresh = () => {\n    props.this.getApi(props.this.state.api);\n  };\n\n  return (\n    <>\n      <Button variant=\"outline-primary ml-2\" size=\"sm\" onClick={handleShow}>\n        Set\n      </Button>\n      <Button variant=\"outline-success ml-2\" size=\"sm\" onClick={handleRefresh}>\n        Refresh\n      </Button>\n\n      <Modal show={show} onHide={handleClose} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>LED parameters</Modal.Body>\n        <Modal.Footer>\n          <Form>\n            <Form.Group controlId=\"url\">\n              <Form.Label>Action (on / off)</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Action\"\n                defaultValue={props.result.Oem.Custom.Action}\n                onChange={handleAction}\n              />\n            </Form.Group>\n          </Form>\n          <Button variant=\"primary\" onClick={applyAction}>\n            Apply\n          </Button>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nfunction LedsItem(props) {\n  return (\n    <React.Fragment>\n      <td>{props.result.SensorNumber}</td>\n      <td>{props.result.Name}</td>\n      <td>{props.result.Reading}</td>\n      <td>{props.result.ReadingUnits}</td>\n      <td>\n        {props.result.Oem.Custom.Duty}\n        <LedsAction this={props.this} result={props.result} />\n      </td>\n      <td>\n        {props.result.Status.State}/{props.result.Status.Health}\n      </td>\n    </React.Fragment>\n  );\n}\n\nfunction Leds(props) {\n  return (\n    <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>Sensor#</th>\n          <th>Name</th>\n          <th>Reading</th>\n          <th>Unit</th>\n          <th>Action</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.item.result.map(r => (\n          <tr key={r.Name + \"tr\"}>\n            <LedsItem key={props.item.name} this={props.this} result={r} />\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction ButtonsItem(props) {\n  return (\n    <React.Fragment>\n      <td>{props.result.SensorNumber}</td>\n      <td>{props.result.Name}</td>\n      <td>{props.result.Reading}</td>\n      <td>{props.result.ReadingUnits}</td>\n      <td>\n        {props.result.Status.State}/{props.result.Status.Health}\n      </td>\n    </React.Fragment>\n  );\n}\n\nfunction Buttons(props) {\n  return (\n    <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>Sensor#</th>\n          <th>Name</th>\n          <th>Reading</th>\n          <th>Unit</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.item.result.map(r => (\n          <tr key={r.Name + \"tr\"}>\n            <ButtonsItem key={props.item.name} result={r} />\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction VoltagesItem(props) {\n  return (\n    <React.Fragment>\n      <td>{props.result.SensorNumber}</td>\n      <td>{props.result.Name}</td>\n      <td>{props.result.ReadingVolts}</td>\n      <td>\n        {props.result.Status.State}/{props.result.Status.Health}\n      </td>\n    </React.Fragment>\n  );\n}\n\nfunction Voltages(props) {\n  return (\n    <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>Sensor#</th>\n          <th>Name</th>\n          <th>Reading</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.result.map(r => (\n          <tr key={r.Name + \"tr\"}>\n            <VoltagesItem key={r.Name} result={r} />\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction Psus1Item(props) {\n  return (\n    <React.Fragment>\n      <td>{props.result.Name}</td>\n      <td>{props.result.PowerSupplyType}</td>\n      <td>{props.result.LineInputVoltageType}</td>\n      <td>{props.result.LineInputVoltage}</td>\n      <td>{props.result.PowerCapacityWatts}</td>\n      <td>{props.result.LastPowerOutputWatts}</td>\n      <td>{props.result.PowerInputWatts}</td>\n      <td>{props.result.PowerOutputWatts}</td>\n    </React.Fragment>\n  );\n}\n\nfunction Psus1(props) {\n  return (\n    <Table striped bordered hover size=\"sm\" responsive=\"xl\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Power Supply Type</th>\n          <th>Line Input Voltage Type</th>\n          <th>Line Input Voltage</th>\n          <th>Power Capacity Watts</th>\n          <th>Last Power Output Watts</th>\n          <th>Power Input Watts</th>\n          <th>Power Output Watts</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.result.map(r => (\n          <tr key={r.Name + \"tr\"}>\n            <Psus1Item key={r.Name} result={r} />\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction Psus2Item(props) {\n  return (\n    <React.Fragment>\n      <td>{props.result.Name}</td>\n      <td>{props.result.Model}</td>\n      <td>{props.result.Manufacturer}</td>\n      <td>{props.result.FirmwareVersion}</td>\n      <td>{props.result.SerialNumber}</td>\n      <td>{props.result.PartNumber}</td>\n      <td>{props.result.SparePartNumber}</td>\n      <td>\n        {props.result.Status.State}/{props.result.Status.Health}\n      </td>\n    </React.Fragment>\n  );\n}\n\nfunction Psus2(props) {\n  return (\n    <Table striped bordered hover size=\"sm\" responsive=\"xl\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Model</th>\n          <th>Manufacturer</th>\n          <th>Version</th>\n          <th>Serial Number</th>\n          <th>Part Number</th>\n          <th>Spare Part Number</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.result.map(r => (\n          <tr key={r.Name + \"tr\"}>\n            <Psus2Item key={r.Name} result={r} />\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nfunction PsusRangeItem(props) {\n  return (\n    <React.Fragment>\n      <td>{props.result.Name}</td>\n      <td>{props.rangeIndex}</td>\n      <td>{props.range.InputType}</td>\n      <td>{props.range.MinimumVoltage}</td>\n      <td>{props.range.MaximumVoltage}</td>\n      <td>{props.range.MinimumFrequencyHz}</td>\n      <td>{props.range.MaximumFrequencyHz}</td>\n      <td>{props.range.OutputWattage}</td>\n    </React.Fragment>\n  );\n}\n\nfunction PsusRange(props) {\n  return (\n    <React.Fragment>\n      {props.result.map((psu, psuIndex) => (\n        <Table\n          key={psu.Name + \"table\"}\n          striped\n          bordered\n          hover\n          size=\"sm\"\n          responsive=\"xl\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Range</th>\n              <th>InputType</th>\n              <th>MinimumVoltage</th>\n              <th>MaximumVoltage</th>\n              <th>MinimumFrequencyHz</th>\n              <th>MaximumFrequencyHz</th>\n              <th>OutputWattage</th>\n            </tr>\n          </thead>\n          <tbody key={psu.Name + psuIndex + \"tbody\"}>\n            {psu.InputRanges.map((r, rIndex) => (\n              <tr key={psu.Name + rIndex + \"tr\"}>\n                <PsusRangeItem\n                  key={r.Name}\n                  result={psu}\n                  range={r}\n                  rangeIndex={rIndex}\n                />\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      ))}\n    </React.Fragment>\n  );\n}\n\nfunction Power(props) {\n  return (\n    <React.Fragment>\n      <br />\n      <Badge\n        key={props.item.result.Name + \".volt.badge\"}\n        pill\n        variant=\"secondary\"\n      >\n        Voltages\n      </Badge>\n      <Voltages\n        key={props.item.result.Name + \".volt\"}\n        result={props.item.result.Voltages}\n      />\n      <Badge\n        key={props.item.result.Name + \".psu.badge\"}\n        pill\n        variant=\"secondary\"\n      >\n        Power Supplies\n      </Badge>\n      <Psus1\n        key={props.item.result.Name + \".psus1\"}\n        result={props.item.result.PowerSupplies}\n      />\n      <Psus2\n        key={props.item.result.Name + \".psus2\"}\n        result={props.item.result.PowerSupplies}\n      />\n      <PsusRange\n        key={props.item.result.Name + \".psusRange\"}\n        result={props.item.result.PowerSupplies}\n      />\n    </React.Fragment>\n  );\n}\n\nfunction renderSsdStatus(status) {\n  if (status === undefined) {\n    return \"undefined\";\n  }\n\n  return status.State + \"/\" + status.Health;\n}\n\nfunction SsdsItem(props) {\n  return (\n    <React.Fragment>\n      <td>{props.result.Name}</td>\n      <td>{props.result.Manufacturer}</td>\n      <td>{props.result.Model}</td>\n      <td>{props.result.SerialNumber}</td>\n      <td>{props.result.ReadingCelsius}</td>\n      <td>Celsius</td>\n      <td>{renderSsdStatus(props.result.Status)}</td>\n    </React.Fragment>\n  );\n}\n\nfunction Ssds(props) {\n  return (\n    <Table striped bordered hover size=\"sm\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Manufacturer</th>\n          <th>Model</th>\n          <th>SerialNumber</th>\n          <th>Reading</th>\n          <th>Unit</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr key={props.item.name + \"tr\"}>\n          <SsdsItem key={props.item.name} result={props.item.result} />\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Terminal } from \"xterm\";\nimport \"../xterm.css\";\n\nclass Log extends Component {\n  constructor() {\n    super();\n    if (process.env.NODE_ENV === 'development') {\n      console.log(\"In development mode\");\n      this.defaultEndpoint = \"ws://admin:irene@l72.16.178.236:8880/private/logsocket\";\n    } else {\n      var url = window.location.href\n      var arr = url.split(\"/\");\n      this.defaultEndpoint = \"ws://admin:irene@\" + arr[2] + \"/private/logsocket\";\n    }\n    console.log(this.defaultEndpoint);\n\n    this.state = {\n      platStdio: \"\",\n      platStderr: \"\",\n      serverStdio: \"\",\n      serverStderr: \"\",\n      response: \"\",\n      endpoint: this.defaultEndpoint,\n    };\n    this.platStdioTerm = React.createRef();\n    this.platStderrTerm = React.createRef();\n    this.serverStdioTerm = React.createRef();\n    this.serverStderrTerm = React.createRef();\n  }\n\n  componentDidMount() {\n    this.getPlatStdio();\n    this.getPlatStderr();\n    this.getServerStdio();\n    this.getServerStderr();\n  }\n\n  componentDidUpdate() {\n  }\n\n  useStyles = () =>\n    makeStyles({\n      table: {\n        minWidth: 6500\n      }\n    });\n\n  getPlatStdio() {\n    var term = new Terminal();\n    term.open(this.platStdioTerm);\n    var ws = new WebSocket(this.state.endpoint);\n    ws.onopen = () => {\n      ws.send(\"plat-stdio\");\n    };\n    ws.onmessage = evt => {\n      console.log(\"Received Message: \" + evt.data);\n      this.setState({ platStdio: evt.data });\n      term.write(evt.data + \"\\n\\r\");\n    };\n    ws.onclose = evt => {\n      console.log(\"close:\" + evt);\n    };\n  }\n\n  getPlatStderr() {\n    var term = new Terminal();\n    term.open(this.platStderrTerm);\n    var ws = new WebSocket(this.state.endpoint);\n    ws.onopen = () => {\n      ws.send(\"plat-stderr\");\n    };\n    ws.onmessage = evt => {\n      console.log(\"Received Message: \" + evt.data);\n      this.setState({ platStderr: evt.data });\n      term.write(evt.data + \"\\n\\r\");\n    };\n    ws.onclose = evt => {\n      console.log(\"close:\" + evt);\n    };\n  }\n\n  getServerStdio() {\n    var term = new Terminal();\n    term.open(this.serverStdioTerm);\n    var ws = new WebSocket(this.state.endpoint);\n    ws.onopen = () => {\n      ws.send(\"server-stdio\");\n    };\n    ws.onmessage = evt => {\n      console.log(\"Received Message: \" + evt.data);\n      this.setState({ serverStdio: evt.data });\n      term.write(evt.data + \"\\n\\r\");\n    };\n    ws.onclose = () => {\n      console.log(\"close:\");\n    };\n  }\n\n  getServerStderr() {\n    var term = new Terminal();\n    term.open(this.serverStderrTerm);\n    var ws = new WebSocket(this.state.endpoint);\n    ws.onopen = () => {\n      ws.send(\"server-stderr\");\n    };\n    ws.onmessage = evt => {\n      console.log(\"Received Message: \" + evt.data);\n      this.setState({ serverStderr: evt.data });\n      term.write(evt.data + \"\\n\\r\");\n    };\n    ws.onclose = evt => {\n      console.log(\"close:\" + evt);\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Container fluid>\n          <Row>\n            <Col>\n              <p>Plat: stdio</p>\n              <div ref={ref => (this.platStdioTerm = ref)}></div>\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col>\n              <p>Plat: stderr</p>\n              <div ref={ref => (this.platStderrTerm = ref)}></div>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <p>Plat: stdio</p>\n              <div ref={ref => (this.serverStdioTerm = ref)}></div>\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col>\n              <p>Plat: stderr</p>\n              <div ref={ref => (this.serverStderrTerm = ref)}></div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Log;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ReactJson from \"react-json-view\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Alert from \"react-bootstrap/Alert\";\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n    if (process.env.NODE_ENV === 'development') {\n      console.log(\"In development mode\");\n      this.defaultIp = \"localhost:8880\";\n      this.defaultUrl = \"http://\" + this.defaultIp + \"/redfish/v1\";\n    } else {\n      var url = window.location.href\n      var arr = url.split(\"/\");\n      this.defaultIp = arr[2];\n      this.defaultUrl = \"http://\" + this.defaultIp + \"/redfish/v1\";\n    }\n    this.defaultUser = \"admin\";\n    this.defaultPassword = \"irene\";\n\n    this.defaultResult = \"None\";\n    this.defaultStatus = \"Unknown\";\n\n    this.statusOk = \"Ok\";\n    this.statusFail = \"Fail\";\n\n    this.state = {\n      url: this.defaultUrl,\n      ip: this.defaultIp,\n      user: this.defaultUser,\n      password: this.defaultPassword,\n      result: this.defaultResult,\n      serverStatus: this.defaultStatus,\n      dbStatus: this.defaultStatus,\n      platStatus: this.defaultStatus\n    };\n  }\n\n  componentDidMount() {\n    var url = window.location.href\n    var arr = url.split(\"/\");\n    var result = arr[0] + \"//\" + arr[2]\n    console.log(result);\n  }\n\n  checkServer = () => {\n    axios\n      .get(\"http://\" + this.state.ip + \"/redfish/v1\", {\n        auth: {\n          username: this.state.user,\n          password: this.state.password\n        }\n      })\n      .then(res => {\n        console.log(res.data);\n        this.setState({ serverStatus: this.statusOk });\n      })\n      .catch(e => {\n        console.log(\"axios error: \" + e);\n        this.setState({ serverStatus: this.statusFail });\n      });\n  };\n\n  checkDatabase = () => {\n    axios\n      .get(\"http://\" + this.state.ip + \"/private/db\", {\n        auth: {\n          username: this.state.user,\n          password: this.state.password\n        }\n      })\n      .then(res => {\n        console.log(res.data);\n        this.setState({ dbStatus: this.statusOk });\n      })\n      .catch(e => {\n        console.log(\"axios error: \" + e);\n        this.setState({ dbStatus: this.statusFail });\n      });\n  };\n\n  checkPlatform = () => {\n    axios\n      .get(\"http://\" + this.state.ip + \"/private/rpc\", {\n        auth: {\n          username: this.state.user,\n          password: this.state.password\n        }\n      })\n      .then(res => {\n        console.log(res.data);\n        this.setState({ platStatus: this.statusOk });\n      })\n      .catch(e => {\n        console.log(\"axios error: \" + e);\n        this.setState({ platStatus: this.statusFail });\n      });\n  };\n\n  handleUrlChange = event => {\n    this.setState({ url: event.target.value });\n  };\n\n  handleIpChange = event => {\n    this.setState({ ip: event.target.value });\n  };\n\n  handleUserChange = event => {\n    this.setState({ user: event.target.value });\n  };\n\n  handlePasswordChange = event => {\n    this.setState({ password: event.target.value });\n  };\n\n  handleSubmit = event => {\n    this.checkServer();\n    this.checkDatabase();\n    this.checkPlatform();\n    event.preventDefault();\n  };\n\n  getResult = () => {\n    axios\n      .get(this.state.url, {\n        auth: {\n          username: this.state.user,\n          password: this.state.password\n        }\n      })\n      .then(res => {\n        const result = res.data;\n        console.log(result);\n        this.setState({ result });\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  renderStatus() {\n    return (\n      <div style={{ paddingTop: 10, paddingBottom: 10 }}>\n        <Status this={this} status={this.state.serverStatus} />\n        <Status this={this} status={this.state.dbStatus} />\n        <Status this={this} status={this.state.platStatus} />\n      </div>\n    );\n  }\n\n  renderResult() {\n    if (this.state.result === this.defaultResult)\n      return <div style={{ paddingTop: 10, paddingBottom: 10 }}></div>;\n\n    return (\n      <div style={{ paddingTop: 10, paddingBottom: 10 }}>\n        <ReactJson src={this.state.result} />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <Card border=\"primary mb-2\" style={{ width: \"32rem\" }}>\n          <Card.Body>\n            <Card.Header as=\"h5\">Setting</Card.Header>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group controlId=\"ip\">\n                <Form.Label>IP</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Server IP\"\n                  defaultValue={this.defaultIp}\n                  onChange={this.handleIpChange}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"user\">\n                <Form.Label>User</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Basic auth user\"\n                  defaultValue={this.defaultUser}\n                  onChange={this.handleUserChange}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Basic auth Password\"\n                  defaultValue={this.defautPassword}\n                  onChange={this.handlePasswordChange}\n                />\n              </Form.Group>\n              <Button variant=\"primary mb-2\" type=\"submit\">\n                Run\n              </Button>\n              <Card.Footer>{this.renderStatus()}</Card.Footer>\n            </Form>\n          </Card.Body>\n        </Card>\n\n        <Card border=\"primary\">\n          <Card.Body>\n            <Card.Header as=\"h5\">Test</Card.Header>\n            <Form>\n              <Form.Group controlId=\"url\">\n                <Form.Label>URL</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Server IP\"\n                  defaultValue={this.defaultUrl}\n                  onChange={this.handleUrlChange}\n                />\n              </Form.Group>\n            </Form>\n            <Button\n              variant=\"primary mb-2\"\n              type=\"submit\"\n              onClick={this.getResult}\n            >\n              Get\n            </Button>\n            <Card.Footer>{this.renderResult()}</Card.Footer>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nfunction Status(props) {\n  if (props.status === props.this.statusOk) {\n    return <Alert variant=\"success\">Test Server: {props.status}</Alert>;\n  } else if (props.status === props.statusFail) {\n    return <Alert variant=\"danger\">Test Server: {props.status}</Alert>;\n  } else {\n    return <Alert variant=\"info\">Test Server: {props.status}</Alert>;\n  }\n}\n\n\nexport default Test;\n","import Axios from \"axios\";\nimport React, { Component } from \"react\";\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport RotateLeft from '@material-ui/icons/RotateLeft';\nimport Refresh from '@material-ui/icons/Refresh';\nimport PowerSettingsNew from '@material-ui/icons/PowerSettingsNew';\nimport TextField from '@material-ui/core/TextField';\n\n// Add the icon for the material table\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n    RotateLeft: forwardRef((props, ref) => <RotateLeft {...props} ref={ref} />),\n    RotateLeftSec: forwardRef((props, ref) => <RotateLeft color=\"secondary\" {...props} ref={ref} />),\n    Power: forwardRef((props, ref) => <PowerSettingsNew {...props} ref={ref} />),\n    PowerSec: forwardRef((props, ref) => <PowerSettingsNew color=\"secondary\" {...props} ref={ref} />),\n    Refresh: forwardRef((props, ref) => <Refresh {...props} ref={ref} />),\n};\nclass Network extends Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV === 'development') {\n            console.log(\"In development mode\");\n            this.defaultIp = \"172.16.177.77:8880\";\n            this.defaultUrl = \"http://\" + this.defaultIp;\n        } else {\n            var url = window.location.href\n            var arr = url.split(\"/\");\n            this.defaultIp = arr[2];\n            this.defaultUrl = \"http://\" + this.defaultIp;\n        }\n        this.defaultUser = \"admin\";\n        this.defaultPassword = \"irene\";\n        this.defaultApi = []\n        for (let i = 0; i < 24; i++) {\n            this.defaultApi.push({\n                name: \"NetworkConfig\" + i,\n                url: this.defaultUrl + \"/redfish/v1/Systems/Irene/Ssd/\" + i + \"/NetworkConfig\",\n                result: {}\n            })\n        }\n\n        this.state = {\n            url: this.defaultUrl,\n            user: this.defaultUser,\n            password: this.defaultPassword,\n            api: this.defaultApi,\n        };\n    }\n\n    componentDidMount() {\n        this.getApi();\n        return null;\n    }\n\n    getApi() {\n        this.state.api.map((item, index) => {\n            Axios.get(item.url, {\n                auth: {\n                    username: this.state.user,\n                    password: this.state.password\n                }\n            }).then(res => {\n                let apiCopy = JSON.parse(JSON.stringify(this.state.api))\n                apiCopy[index].result = res.data\n                this.setState({ api: apiCopy })\n            }).catch((err) => {\n                console.log(err);\n            })\n            return null;\n        })\n    }\n\n    getApiWithId(id) {\n        this.state.api.map((item, index) => {\n            if (id === index) {\n                Axios.get(item.url, {\n                    auth: {\n                        username: this.state.user,\n                        password: this.state.password\n                    }\n                }).then(res => {\n                    let apiCopy = JSON.parse(JSON.stringify(this.state.api))\n                    apiCopy[index].result = res.data\n                    this.setState({ api: apiCopy })\n                }).catch((err) => {\n                    console.log(err)\n                })\n                return null\n            }\n            return null\n        })\n    }\n\n    resetSsdWithUrl(url, id, data) {\n        console.log(\"Reset ssd:\", id, \" url:\", url)\n        Axios.patch(url, data, {\n            auth: {\n                username: this.state.user,\n                password: this.state.password\n            }\n        }).then(res => {\n            console.log(\"patch res=\" + JSON.stringify(res));\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    patchApiWithIdAndWait(id, data) {\n        this.state.api.map((item, index) => {\n            if (id === index) {\n                Axios.patch(item.url, data, {\n                    auth: {\n                        username: this.state.user,\n                        password: this.state.password\n                    }\n                }).then(res => {\n                    let retry = 0\n                    // console.log(\"patch res=\" + JSON.stringify(res));\n                    let timer = setInterval(() => {\n                        this.getApiWithId(id)\n                        // console.log(\"retry=\", retry)\n                        if (retry >= 10) {\n                            clearInterval(timer)\n                        }\n                        retry++\n                    }, 1000)\n                }).catch((err) => {\n                    console.log(err)\n                })\n            }\n            return null\n        })\n        return null\n    }\n\n    putApiWithIdAndWait(id, data) {\n        this.state.api.map((item, index) => {\n            if (id === index) {\n                Axios.put(item.url, data, {\n                    auth: {\n                        username: this.state.user,\n                        password: this.state.password\n                    }\n                }).then(res => {\n                    let retry = 0\n                    // console.log(\"put res=\" + JSON.stringify(res));\n                    let timer = setInterval(() => {\n                        this.getApiWithId(id)\n                        // console.log(\"retry=\", retry)\n                        if (retry > 10) {\n                            clearInterval(timer)\n                        }\n                        retry++\n                    }, 1000)\n                }).catch((err) => {\n                    console.log(err);\n                })\n            }\n            return null;\n        })\n    }\n\n    putApiWithId(id, data) {\n        this.state.api.map((item, index) => {\n            if (id === index) {\n                Axios.put(item.url, data, {\n                    auth: {\n                        username: this.state.user,\n                        password: this.state.password\n                    }\n                }).then(res => {\n                    let apiCopy = JSON.parse(JSON.stringify(this.state.api))\n                    apiCopy[index].result = data\n                    this.setState({ api: apiCopy })\n                }).catch((err) => {\n                    console.log(err);\n                })\n            }\n            return null;\n        })\n    }\n\n    render() {\n        return (\n            <NetworkConfig this={this}></NetworkConfig>\n        );\n    }\n}\n\nfunction generateTableRowData(data, ssdId, portId, vlanId, port, vlan) {\n    var config = {\n        ssdId: ssdId,\n        portId: portId,\n        vlanId: vlanId,\n        ipv4Address: port.Ipv4.Address,\n        ipv4Gateway: port.Ipv4.Gateway,\n        ipv4Netmask: port.Ipv4.Mask,\n        ipv6Address: port.Ipv6.Address,\n        ipv6Prefix: port.Ipv6.Prefix,\n        ipv6PrefixLen: port.Ipv6.PrefixLen,\n        vlanType: vlan.Type,\n        vlanVid: vlan.Vid,\n        vlanPcp: vlan.PCP,\n        vlanIpv4: vlan.Ipv4Address,\n        vlanIpv6: vlan.Ipv6Address,\n    }\n    data.push(config)\n}\n\nfunction setApiData(self, data) {\n    let ssdId = data.ssdId\n    let portId = data.portId\n    let vlanId = data.vlanId\n    if (Object.keys(self.state.api[ssdId].result).length === 0) {\n        console.log(\"the api object is empty\")\n        return null\n    }\n\n    let apiData = JSON.parse(JSON.stringify(self.state.api[ssdId].result));\n    if (typeof data.ipv4Address != \"undefined\") {\n        apiData.Port[portId].Ipv4.Address = data.ipv4Address\n    }\n    if (typeof data.ipv4Netmask != \"undefined\") {\n        apiData.Port[portId].Ipv4.Mask = data.ipv4Netmask\n    }\n    if (typeof data.ipv4Gateway != \"undefined\") {\n        apiData.Port[portId].Ipv4.Gateway = data.ipv4Gateway\n    }\n    if (typeof data.ipv6Address != \"undefined\") {\n        apiData.Port[portId].Ipv6.Address = data.ipv6Address\n    }\n    if (typeof data.ipv6Prefix != \"undefined\") {\n        apiData.Port[portId].Ipv6.Prefix = data.ipv6Prefix\n    }\n    if (typeof data.ipv6PrefixLen != \"undefined\") {\n        apiData.Port[portId].Ipv6.PrefixLen = data.ipv6PrefixLen\n    }\n    if (typeof data.vlanType != \"undefined\") {\n        apiData.Port[portId].Vlan[vlanId].Type = data.vlanType\n    }\n    if (typeof data.vlanVid != \"undefined\") {\n        apiData.Port[portId].Vlan[vlanId].Vid = data.vlanVid\n    }\n    if (typeof data.vlanPcp != \"undefined\") {\n        apiData.Port[portId].Vlan[vlanId].PCP = data.vlanPcp\n    }\n    if (typeof data.vlanIpv4 != \"undefined\") {\n        apiData.Port[portId].Vlan[vlanId].Ipv4Address = data.vlanIpv4\n    }\n    if (typeof data.vlanIpv6 != \"undefined\") {\n        apiData.Port[portId].Vlan[vlanId].Ipv6Address = data.vlanIpv6\n    }\n    // self.putApiWithIdAndWait(ssdId, apiData)\n    self.putApiWithId(ssdId, apiData)\n}\n\nfunction NetworkConfig(props) {\n    // The main HTML content in the Network Page\n    let content = []\n    // The row data in the table\n    let data = []\n    // The header in the table\n    let col = [{\n        field: 'ssdId',\n        title: 'eSSD',\n        editable: 'never',\n    }, {\n        field: 'portId',\n        title: 'Port',\n        editable: 'never',\n    }, {\n        field: 'vlanId',\n        title: 'Vlan',\n        editable: 'never',\n    }, {\n        field: 'ipv4Address',\n        title: 'IPv4',\n    }, {\n        field: 'ipv4Netmask',\n        title: 'Netmask',\n    }, {\n        field: 'ipv4Gateway',\n        title: 'Gateway',\n    }, {\n        field: 'ipv6Address',\n        title: 'IPv6',\n    }, {\n        field: 'ipv6Prefix',\n        title: 'Prefix',\n    }, {\n        field: 'ipv6PrefixLen',\n        title: 'Prefix Length',\n    }, {\n        field: 'vlanType',\n        title: 'Vlan Type',\n    }, {\n        field: 'vlanVid',\n        title: 'Vlan Vid',\n    }, {\n        field: 'vlanPcp',\n        title: 'Vlan Pcp',\n    }, {\n        field: 'vlanIpv4',\n        title: 'Vlan Ipv4',\n    }, {\n        field: 'vlanIpv6',\n        title: 'Vlan Ipv6',\n    }];\n\n    // Get the peer IP from the textfile\n    let peerIp = \"172.16.177.79:8880\"\n\n    // Collect the information from API\n    props.this.state.api.map((ssd, ssdId) => {\n        if (Object.keys(ssd.result).length === 0) {\n            return null\n        }\n        if (Object.keys(ssd.result.Port).length === 0) {\n            return null\n        }\n        ssd.result.Port.map((port, portId) => {\n            if (Object.keys(port.Vlan).length === 0) {\n                return null\n            }\n            port.Vlan.map((vlan, vlanId) => {\n                generateTableRowData(data, ssdId, portId, vlanId, port, vlan)\n                return null\n            })\n            return null\n        })\n        return null\n    })\n\n    // Generate Network Config Table\n    content.push(\n        <div style={{ maxWidth: \"100%\" }} key=\"NetworkRoot\">\n            <MaterialTable\n                icons={tableIcons}\n                pageSize={8}\n                pageSizeOptions={[8, 16, 24, 32]}\n                columns={col}\n                data={data}\n                title=\"eSSD Network Config\"\n                editable={{\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve, reject) => {\n                            setApiData(props.this, newData)\n                            resolve()\n                        }),\n                }}\n                options={{ grouping: true, pageSize: 8, pageSizeOptions: [8, 16, 24, 32, 64, 96] }}\n                components={{\n                    Toolbar: props => (\n                        <div>\n                            <MTableToolbar {...props} />\n                            <div style={{ padding: '0px 10px' }}>\n                                <TextField id=\"outlined-basic\" label=\"Enter peer SWM IP\"\n                                    defaultValue={peerIp}\n                                    onChange={(e) => {\n                                        peerIp = e.target.value\n                                    }}\n                                />\n\n                            </div>\n                        </div>\n                    ),\n                }}\n                actions={[\n                    {\n                        icon: tableIcons.Power,\n                        tooltip: 'Reset eSSD',\n                        onClick: (event, rowData) => {\n                            let url = \"http://\" + props.this.defaultIp + \"/redfish/v1/Systems/Irene/Ssd/\" + rowData.ssdId\n                            props.this.resetSsdWithUrl(url, rowData.ssdId, { \"Action\": \"reset\" })\n                        }\n                    },\n                    {\n                        icon: tableIcons.PowerSec,\n                        tooltip: 'Reset peer eSSD',\n                        onClick: (event, rowData) => {\n                            let url = \"http://\" + peerIp + \"/redfish/v1/Systems/Irene/Ssd/\" + rowData.ssdId\n                            props.this.resetSsdWithUrl(url, rowData.ssdId, { \"Action\": \"reset\" })\n                        }\n                    },\n                    {\n                        icon: tableIcons.Refresh,\n                        tooltip: 'Refresh setting',\n                        onClick: (event, rowData) => {\n                            props.this.getApiWithId(rowData.ssdId)\n                        }\n                    },\n                ]}\n            />\n        </div>\n    )\n\n    // Show the HTML content we prepared for\n    return (\n        < div >\n            {content}\n        </div >\n    );\n\n}\n\nexport default Network;\n\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route } from 'react-router-dom';\nimport Menu from \"./Components/Menu\";\nimport Home from \"./Components/Home\"\nimport Log from \"./Components/Log\"\nimport Test from \"./Components/Test\"\nimport Network from \"./Components/Network\"\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Menu />\n      <main className=\"container\">\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/network\" exact component={Network} />\n        <Route path=\"/log\" exact component={Log} />\n        <Route path=\"/test\" component={Test} />\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <App />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}